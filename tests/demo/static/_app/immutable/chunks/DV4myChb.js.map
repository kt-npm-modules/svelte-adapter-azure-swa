{"version":3,"file":"DV4myChb.js","sources":["../../../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js"],"sourcesContent":["/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n"],"names":["init","immutable","context","component_context","callbacks","props","deep_read_state","version","prev","d","derived","changed","key","get","user_pre_effect","observe_all","run_all","user_effect","fns","untrack","run","fn","signal"],"mappings":";;AAWO,SAASA,CAAKC,CAAAA,CAAAA,CAAY,KAAO,CAAA,CACvC,MAAMC,CAAiDC,CAAAA,CAAAA,CAEjDC,CAAYF,CAAAA,CAAAA,CAAQ,EAAE,CAC5B,CAAA,GAAI,CAACE,CAAAA,CAAW,OAEhB,IAAIC,CAAAA,CAAQ,IAAMC,EAAAA,CAAgBJ,CAAQ,CAAA,CAAC,CAE3C,CAAA,GAAID,EAAW,CACd,IAAIM,CAAU,CAAA,CAAA,CACVC,EAA2C,EAAA,CAG/C,MAAMC,CAAAA,CAAIC,GAAQ,IAAM,CACvB,IAAIC,CAAAA,CAAU,KACd,CAAA,MAAMN,CAAQH,CAAAA,CAAAA,CAAQ,EACtB,IAAWU,MAAAA,CAAAA,IAAOP,CACbA,CAAAA,CAAAA,CAAMO,CAAG,CAAMJ,GAAAA,CAAAA,CAAKI,CAAG,CAAA,GAC1BJ,EAAKI,CAAG,CAAA,CAAIP,CAAMO,CAAAA,CAAG,EACrBD,CAAU,CAAA,IAAA,CAAA,CAGZ,OAAIA,CAAAA,EAASJ,IACNA,CACV,CAAG,CAEDF,CAAAA,CAAAA,CAAQ,IAAMQ,CAAIJ,CAAAA,CAAC,EACrB,CAGKL,EAAU,CAAE,CAAA,MAAA,EACfU,EAAgB,CAAA,IAAM,CACrBC,CAAAA,CAAYb,CAASG,CAAAA,CAAK,EAC1BW,EAAQZ,CAAAA,CAAAA,CAAU,CAAC,EACtB,CAAG,CAIFa,CAAAA,EAAAA,CAAY,IAAM,CACjB,MAAMC,CAAMC,CAAAA,EAAAA,CAAQ,IAAMf,CAAAA,CAAU,CAAE,CAAA,GAAA,CAAIgB,EAAG,CAAC,EAC9C,OAAO,IAAM,CACZ,IAAA,MAAWC,KAAMH,CACZ,CAAA,OAAOG,CAAO,EAAA,UAAA,EACjBA,IAGF,CACH,CAAE,CAAA,CAGGjB,CAAU,CAAA,CAAA,CAAE,MACfa,EAAAA,EAAAA,CAAY,IAAM,CACjBF,CAAAA,CAAYb,CAASG,CAAAA,CAAK,EAC1BW,EAAQZ,CAAAA,CAAAA,CAAU,CAAC,EACtB,CAAG,EAEH,CAQA,SAASW,CAAAA,CAAYb,EAASG,CAAO,CAAA,CACpC,GAAIH,CAAAA,CAAQ,EAAE,CACb,CAAA,IAAA,MAAWoB,CAAUpB,IAAAA,CAAAA,CAAQ,EAAE,CAAGW,CAAAA,CAAAA,CAAIS,CAAM,CAAA,CAG7CjB,IACD;;;;","x_google_ignoreList":[0]}