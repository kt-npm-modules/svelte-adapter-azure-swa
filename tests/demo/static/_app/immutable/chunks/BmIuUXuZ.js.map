{"version":3,"file":"BmIuUXuZ.js","sources":["../../../../node_modules/svelte/src/internal/shared/validate.js","../../../../node_modules/svelte/src/internal/client/dom/blocks/snippet.js"],"sourcesContent":["/** @import { TemplateNode } from '#client' */\n/** @import { Getters } from '#shared' */\nimport { is_void } from '../../utils.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\n\nexport { invalid_default_snippet } from './errors.js';\n\n/**\n * @param {() => string} tag_fn\n * @returns {void}\n */\nexport function validate_void_dynamic_element(tag_fn) {\n\tconst tag = tag_fn();\n\tif (tag && is_void(tag)) {\n\t\tw.dynamic_void_element_content(tag);\n\t}\n}\n\n/** @param {() => unknown} tag_fn */\nexport function validate_dynamic_element_tag(tag_fn) {\n\tconst tag = tag_fn();\n\tconst is_string = typeof tag === 'string';\n\tif (tag && !is_string) {\n\t\te.svelte_element_invalid_this_value();\n\t}\n}\n\n/**\n * @param {any} store\n * @param {string} name\n */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\te.store_invalid_shape(name);\n\t}\n}\n\n/**\n * @template {() => unknown} T\n * @param {T} fn\n */\nexport function prevent_snippet_stringification(fn) {\n\tfn.toString = () => {\n\t\te.snippet_without_render_tag();\n\t\treturn '';\n\t};\n\treturn fn;\n}\n","/** @import { Snippet } from 'svelte' */\n/** @import { Effect, TemplateNode } from '#client' */\n/** @import { Getters } from '#shared' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport { branch, block, destroy_effect, teardown } from '../../reactivity/effects.js';\nimport {\n\tdev_current_component_function,\n\tset_dev_current_component_function\n} from '../../context.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport * as e from '../../errors.js';\nimport { DEV } from 'esm-env';\nimport { get_first_child, get_next_sibling } from '../operations.js';\nimport { noop } from '../../../shared/utils.js';\nimport { prevent_snippet_stringification } from '../../../shared/validate.js';\n\n/**\n * @template {(node: TemplateNode, ...args: any[]) => void} SnippetFn\n * @param {TemplateNode} node\n * @param {() => SnippetFn | null | undefined} get_snippet\n * @param {(() => any)[]} args\n * @returns {void}\n */\nexport function snippet(node, get_snippet, ...args) {\n\tvar anchor = node;\n\n\t/** @type {SnippetFn | null | undefined} */\n\t// @ts-ignore\n\tvar snippet = noop;\n\n\t/** @type {Effect | null} */\n\tvar snippet_effect;\n\n\tblock(() => {\n\t\tif (snippet === (snippet = get_snippet())) return;\n\n\t\tif (snippet_effect) {\n\t\t\tdestroy_effect(snippet_effect);\n\t\t\tsnippet_effect = null;\n\t\t}\n\n\t\tif (DEV && snippet == null) {\n\t\t\te.invalid_snippet();\n\t\t}\n\n\t\tsnippet_effect = branch(() => /** @type {SnippetFn} */ (snippet)(anchor, ...args));\n\t}, EFFECT_TRANSPARENT);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * In development, wrap the snippet function so that it passes validation, and so that the\n * correct component context is set for ownership checks\n * @param {any} component\n * @param {(node: TemplateNode, ...args: any[]) => void} fn\n */\nexport function wrap_snippet(component, fn) {\n\tconst snippet = (/** @type {TemplateNode} */ node, /** @type {any[]} */ ...args) => {\n\t\tvar previous_component_function = dev_current_component_function;\n\t\tset_dev_current_component_function(component);\n\n\t\ttry {\n\t\t\treturn fn(node, ...args);\n\t\t} finally {\n\t\t\tset_dev_current_component_function(previous_component_function);\n\t\t}\n\t};\n\n\tprevent_snippet_stringification(snippet);\n\n\treturn snippet;\n}\n\n/**\n * Create a snippet programmatically\n * @template {unknown[]} Params\n * @param {(...params: Getters<Params>) => {\n *   render: () => string\n *   setup?: (element: Element) => void | (() => void)\n * }} fn\n * @returns {Snippet<Params>}\n */\nexport function createRawSnippet(fn) {\n\t// @ts-expect-error the types are a lie\n\treturn (/** @type {TemplateNode} */ anchor, /** @type {Getters<Params>} */ ...params) => {\n\t\tvar snippet = fn(...params);\n\n\t\t/** @type {Element} */\n\t\tvar element;\n\n\t\tif (hydrating) {\n\t\t\telement = /** @type {Element} */ (hydrate_node);\n\t\t\thydrate_next();\n\t\t} else {\n\t\t\tvar html = snippet.render().trim();\n\t\t\tvar fragment = create_fragment_from_html(html);\n\t\t\telement = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (DEV && (get_next_sibling(element) !== null || element.nodeType !== 1)) {\n\t\t\t\tw.invalid_raw_snippet_render();\n\t\t\t}\n\n\t\t\tanchor.before(element);\n\t\t}\n\n\t\tconst result = snippet.setup?.(element);\n\t\tassign_nodes(element, element);\n\n\t\tif (typeof result === 'function') {\n\t\t\tteardown(result);\n\t\t}\n\t};\n}\n"],"names":["prevent_snippet_stringification","fn","e.snippet_without_render_tag","snippet","node","get_snippet","args","anchor","noop","snippet_effect","block","destroy_effect","e.invalid_snippet","branch","EFFECT_TRANSPARENT","hydrating","hydrate_node","wrap_snippet","component","previous_component_function","dev_current_component_function","set_dev_current_component_function"],"mappings":";;AA0CO,SAASA,CAAAA,CAAgCC,EAAI,CACnD,OAAAA,EAAG,QAAW,CAAA,KACbC,IACO,CAAA,EAAA,CAAA,CAEDD,CACR,CCtBO,SAASE,EAAQC,CAAMC,CAAAA,CAAAA,CAAAA,GAAgBC,EAAM,CACnD,IAAIC,EAASH,CAITD,CAAAA,CAAAA,CAAUK,GAGVC,CAEJC,CAAAA,EAAAA,CAAM,IAAM,CACPP,CAAAA,IAAaA,EAAUE,CAAW,EAAA,CAAA,GAElCI,IACHE,CAAeF,CAAAA,CAAc,EAC7BA,CAAiB,CAAA,IAAA,CAAA,CAGPN,GAAW,IACrBS,EAAAA,EAAAA,GAGDH,CAAiBI,CAAAA,EAAAA,CAAO,IAAgCV,CAASI,CAAAA,CAAAA,CAAQ,GAAGD,CAAI,CAAC,GACjF,CAAEQ,CAAAA,EAAkB,EAEjBC,CACHR,GAAAA,CAAAA,CAASS,GAEX,CAQO,SAASC,EAAaC,CAAWjB,CAAAA,CAAAA,CAAI,CAC3C,MAAME,CAAAA,CAAU,CAA6BC,CAA8BE,CAAAA,GAAAA,CAAAA,GAAS,CACnF,IAAIa,CAAAA,CAA8BC,GAClCC,EAAmCH,CAAAA,CAAS,EAE5C,GAAI,CACH,OAAOjB,CAAGG,CAAAA,CAAAA,CAAM,GAAGE,CAAI,CAC1B,QAAY,CACTe,EAAAA,CAAmCF,CAA2B,EACjE,CACE,EAED,OAAAnB,CAAAA,CAAgCG,CAAO,CAAA,CAEhCA,CACR;;;;","x_google_ignoreList":[0,1]}