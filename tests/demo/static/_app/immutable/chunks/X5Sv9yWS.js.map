{"version":3,"file":"X5Sv9yWS.js","sources":["../../../../node_modules/clsx/dist/clsx.mjs","../../../../node_modules/svelte/src/internal/shared/attributes.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n"],"names":["r","e","o","clsx","value","_clsx","whitespace","to_class","hash","directives","classname","key","len","a","b","to_style","styles"],"mappings":"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","x_google_ignoreList":[0,1]}