name: CI-SWA

on:
  workflow_call:
    inputs:
      # pass the matrix node version to the called workflow
      matrix-node-version:
        required: true
        type: string
      cache-additional-path:
        required: false
        type: string
      cache-reset:
        required: false
        type: boolean
    secrets:
      WORKFLOW_APP_ID:
        required: true
      WORKFLOW_APP_PRIVATE_KEY:
        required: true
      AZURE_STATIC_WEB_APPS_API_TOKEN:

permissions:
  contents: read # to fetch code (actions/checkout)
  pull-requests: write # to create comments (actions/github-script)
  actions: write # to create a comment (actions/github-script)

jobs:
  swa-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.matrix-node-version) }}
    defaults:
      run:
        working-directory: demo
    steps:
      - uses: actions/checkout@v4

      - uses: kt-actions/npm-run-script@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-reset: ${{ inputs.cache-reset }}
          install-script: |
            npm ci
            npx playwright install
          run-script: npm run test:swa
          working-directory: ./demo

  do-swa-azure:
    environment: development
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.result.outputs.result }}
    steps:
      # Check that the PR is from the same repo or its a push on the main branch
      - id: event
        if: |
          github.repository == github.event.pull_request.head.repo.full_name &&
          github.event_name == 'pull_request' ||
          github.event_name == 'push'
        run: |
          echo "github.repository: ${{ github.repository }}"
          echo "github.event.pull_request.head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "result=true" >> "$GITHUB_OUTPUT"

      # Check if AZURE_STATIC_WEB_APPS_API_TOKEN is set
      - id: token
        if: steps.event.outputs.result != 'false'
        run: |
          if [[ -z "${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}" ]]; then
            echo "result=false" >> "$GITHUB_OUTPUT"
          else
            echo "result=true" >> "$GITHUB_OUTPUT"
          fi

      # Combine the results of the previous steps
      - id: result
        run: |
          if [[ "${{ steps.event.outputs.result }}" == "true" || "${{ steps.token.outputs.result }}" == "true" ]]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

  swa-azure:
    needs: do-swa-azure
    environment: development
    if: ${{ needs.do-swa-azure.outputs.result == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.matrix-node-version) }}
    defaults:
      run:
        working-directory: demo
    steps:
      - id: app-token
        uses: kt-actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}
          configure-git: false

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - uses: kt-actions/npm-run-script@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-reset: ${{ inputs.cache-reset }}
          install-script: |
            npm ci
            npx playwright install
          run-script: npm run test
          working-directory: ./demo

      - uses: ./.github/actions/static-web-apps-deploy-wrapper
        if: needs.do-test-azure.outputs.do-test == 'true'
        id: build-deploy
        env:
          NODE_API_RUNTIME: node:${{ steps.api-runtime.outputs.major }}
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ steps.app-token.outputs.token }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: './demo' # App source code path
          api_location: './demo/func' # Api source code path - optional
          output_location: 'build/static' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

      - run: npm test
        if: needs.do-test-azure.outputs.do-test == 'true'
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.build-deploy.outputs.static_web_app_url }}
