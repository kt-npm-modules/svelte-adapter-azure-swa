name: CI

on:
  push:
    branches:
      - main
  pull_request:

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # to create a comment (actions/github-script)
  pull-requests: write # to create comments (actions/github-script)

env:
  DEFAULT_MATRIX_NODE_VERSION: '[20]'
  DEFAULT_CACHE_RESET: false
  PUBLIC_SWA: false
  CI: true

jobs:
  # echo:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(github) }}
  #       shell: cat {0}

  config:
    # prepare the configuration for the workflow from different sources of variables
    runs-on: ubuntu-latest
    outputs:
      matrix-node-version: ${{ steps.config.outputs.MATRIX_NODE_VERSION }}
      cache-reset: ${{ steps.config.outputs.CACHE_RESET }}
      do-sonar: ${{ steps.config.outputs.DO_SONAR }}
    steps:
      - id: config
        run: |
          if [[ -z "${{ vars.MATRIX_NODE_VERSION }}" ]]; then
            echo "MATRIX_NODE_VERSION is not set. Using default value to $DEFAULT_MATRIX_NODE_VERSION."
            echo "MATRIX_NODE_VERSION=$DEFAULT_MATRIX_NODE_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "MATRIX_NODE_VERSION is set to '${{ vars.MATRIX_NODE_VERSION }}'."
            echo "MATRIX_NODE_VERSION=${{ vars.MATRIX_NODE_VERSION }}" >> "$GITHUB_OUTPUT"
          fi
          if [[ -z "${{ vars.CACHE_RESET }}" ]]; then
            echo "CACHE_RESET is not set. Using default value to $DEFAULT_CACHE_RESET."
            echo "CACHE_RESET=$DEFAULT_CACHE_RESET" >> "$GITHUB_OUTPUT"
          else
            echo "CACHE_RESET is set to '${{ vars.CACHE_RESET }}'."
            echo "CACHE_RESET=${{ vars.CACHE_RESET }}" >> "$GITHUB_OUTPUT"
          fi
          if [[ -z "${{ secrets.SONAR_TOKEN }}" ]]; then
            echo "SONAR_TOKEN is not set. Skipping SonarQube analysis."
            echo "DO_SONAR=false" >> "$GITHUB_OUTPUT"
          else
            echo "SONAR_TOKEN is set. Will run SonarQube analysis."
            echo "DO_SONAR=true" >> "$GITHUB_OUTPUT"
          fi

  check:
    needs: config
    runs-on: ubuntu-latest
    steps:
      - uses: kt-workflows/actions/npm-ci-check@main
        with:
          matrix-node-version: ${{ needs.config.outputs.matrix-node-version }}
          cache-reset: ${{ needs.config.outputs.cache-reset }}
          run-script: |
            npm run build --prefix ./tests/demo
            npm run check
            npm run
        env:
          PUBLIC_SWA: true

  test:
    needs: config
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.config.outputs.matrix-node-version) }}
    steps:
      - uses: kt-workflows/actions/npm-ci-test@main
        with:
          # pass the matrix node version to the called workflow
          node-version: ${{ matrix.node-version }}
          cache-reset: ${{ needs.config.outputs.cache-reset }}

  sonar:
    needs: config
    runs-on: ubuntu-latest
    # if: needs.config.outputs.do-sonar == 'true'
    steps:
      - uses: kt-workflows/actions/npm-ci-sonar@main
        with:
          matrix-node-version: ${{ needs.config.outputs.matrix-node-version }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          # fail-on-empty-token: false # PRs outside of the org will not have a sonar token (secrets.SONAR_TOKEN is not available)
          cache-reset: ${{ needs.config.outputs.cache-reset }}

  swa:
    strategy:
      matrix:
        node-version: ${{ fromJson(needs.config.outputs.matrix-node-version) }}
    needs: config
    uses: ./.github/workflows/ci-swa.yml
    with:
      node-version: ${{ matrix.node-version }}
      cache-reset: ${{ needs.config.outputs.cache-reset == 'true' }}
    secrets: inherit

  retry-failed:
    runs-on: ubuntu-latest
    needs: [swa]
    if: failure() && fromJSON(github.run_attempt) < 2
    permissions:
      actions: write
    steps:
      - env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          GH_DEBUG: api
        run: gh workflow run ci-retry.yml -F run_id=${{ github.run_id }} -F concurrency="${{ github.workflow }}-${{ github.event.number || github.ref_name }}"
        continue-on-error: true
