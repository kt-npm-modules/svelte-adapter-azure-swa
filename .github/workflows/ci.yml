name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]

env:
  # we call `pnpm playwright install` instead
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  lint:
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npm run check-types
      - run: npm run check-format
      - run: |
          npm ci
          npm run check
        working-directory: ./demo
  test:
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npm test
  test-swa:
    if: ${{ !(github.event_name == 'pull_request' && github.event.action == 'closed') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    defaults:
      run:
        working-directory: ./demo
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - run: npx playwright install chromium --with-deps
      - run: npm run test:swa
  # clean-azure:
  #   if: |
  #     ${{
  #       github.repository == github.event.pull_request.head.repo.full_name &&
  #       !(github.event_name == 'pull_request' && github.event.action == 'closed') &&
  #       ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN != '' }}
  #     }}
  #   runs-on: ubuntu-latest
  #   name: Delete old bot comment
  #   steps:
  #     - name: pr-deleter
  #       uses: maheshrayas/action-pr-comment-delete@06d7254b4aeba4491a66a7e0f755b107f7373ccd
  #       with:
  #         github_token: "${{ secrets.GITHUB_TOKEN }}"
  #         org: "geoffrich"
  #         repo: "svelte-adapter-azure-swa"
  #         user: "github-actions[bot]"
  #         issue: "${{github.event.number}}"
  test-azure:
    timeout-minutes: 10
    if: |
      github.repository == github.event.pull_request.head.repo.full_name &&
      !(github.event_name == 'pull_request' && github.event.action == 'closed') &&
      ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    defaults:
      run:
        working-directory: ./demo
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./**/package-lock.json
      - run: npm ci
      - uses: Azure/static-web-apps-deploy@v1
        id: builddeploy
        with:
          azure_static_web_apps_api_token: $AZURE_STATIC_WEB_APPS_API_TOKEN
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/demo" # App source code path
          api_location: "demo/func" # Api source code path - optional
          output_location: "build/static" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
      - run: npx playwright install chromium --with-deps
      - run: npm test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.builddeploy.outputs.preview_url }}
  close-azure:
    if: |
      github.repository == github.event.pull_request.head.repo.full_name &&
      (github.event_name == 'pull_request' && github.event.action == 'closed') &&
      ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN != '' }}
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: $AZURE_STATIC_WEB_APPS_API_TOKEN
          action: "close"
