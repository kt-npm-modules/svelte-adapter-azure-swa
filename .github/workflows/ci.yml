name: CI

on:
  push:
    branches:
      - main
  pull_request:

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  # group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # to create a comment (actions/github-script)
  pull-requests: write # to create comments (actions/github-script)

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true
  DEFAULT_MATRIX_NODE_VERSION: '[20]'
  DEFAULT_CACHE_ADDITIONAL_PATH: /home/runner/.cache/ms-playwright
  DEFAULT_CACHE_RESET: false

jobs:
  # echo:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(github) }}
  #       shell: cat {0}

  config:
    # prepare the configuration for the workflow from different sources of variables
    runs-on: ubuntu-latest
    outputs:
      matrix-node-version: ${{ steps.config.outputs.MATRIX_NODE_VERSION }}
      cache-additional-path: ${{ steps.config.outputs.CACHE_ADDITIONAL_PATH }}
      cache-reset: ${{ steps.config.outputs.CACHE_RESET }}
    steps:
      - id: config
        run: |
          if [[ -z "${{ vars.MATRIX_NODE_VERSION }}" ]]; then
            echo "MATRIX_NODE_VERSION is not set. Using default value to $DEFAULT_MATRIX_NODE_VERSION."
            echo "MATRIX_NODE_VERSION=$DEFAULT_MATRIX_NODE_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "MATRIX_NODE_VERSION is set to '${{ vars.MATRIX_NODE_VERSION }}'."
            echo "MATRIX_NODE_VERSION=${{ vars.MATRIX_NODE_VERSION }}" >> "$GITHUB_OUTPUT"
          fi
          if [[ -z "${{ vars.CACHE_ADDITIONAL_PATH }}" ]]; then
            echo "CACHE_ADDITIONAL_PATH is not set. Using default value to $DEFAULT_CACHE_ADDITIONAL_PATH."
            echo "CACHE_ADDITIONAL_PATH=$DEFAULT_CACHE_ADDITIONAL_PATH" >> "$GITHUB_OUTPUT"
          else
            echo "CACHE_ADDITIONAL_PATH is set to '${{ vars.CACHE_ADDITIONAL_PATH }}'."
            echo "CACHE_ADDITIONAL_PATH=${{ vars.CACHE_ADDITIONAL_PATH }}" >> "$GITHUB_OUTPUT"
          fi
          if [[ -z "${{ vars.CACHE_RESET }}" ]]; then
            echo "CACHE_RESET is not set. Using default value to $DEFAULT_CACHE_RESET."
            echo "CACHE_RESET=$DEFAULT_CACHE_RESET" >> "$GITHUB_OUTPUT"
          else
            echo "CACHE_RESET is set to '${{ vars.CACHE_RESET }}'."
            echo "CACHE_RESET=${{ vars.CACHE_RESET }}" >> "$GITHUB_OUTPUT"
          fi

  ci:
    needs: config
    uses: kt-workflows/npm-ci/.github/workflows/main.yml@v1
    with:
      matrix-node-version: ${{ needs.config.outputs.matrix-node-version }}
      cache-additional-path: ${{ needs.config.outputs.cache-additional-path }}
      cache-reset: ${{ needs.config.outputs.cache-reset == 'true' }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  ci-swa:
    needs: config
    uses: ./.github/workflows/ci-swa.yml
    with:
      matrix-node-version: ${{ needs.config.outputs.matrix-node-version }}
      cache-additional-path: ${{ needs.config.outputs.cache-additional-path }}
      cache-reset: ${{ needs.config.outputs.cache-reset == 'true' }}
    secrets: inherit

  retry-failed:
    runs-on: ubuntu-latest
    needs: [ci, ci-swa]
    if: failure() && fromJSON(github.run_attempt) < 2
    permissions:
      actions: write
    steps:
      - env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          GH_DEBUG: api
        run: gh workflow run ci-retry.yml -F run_id=${{ github.run_id }} -F concurrency=${{ github.workflow }}-${{ github.event.number || github.ref_name }}
        continue-on-error: true
