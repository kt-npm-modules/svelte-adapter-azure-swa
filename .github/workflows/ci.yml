name: CI

on:
  push:
    branches:
      - main
  pull_request:

# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  # group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # to create a comment (actions/github-script)
  pull-requests: write # to create comments (actions/github-script)

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true

jobs:
  # echo:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(github) }}
  #       shell: cat {0}

  ci:
    uses: kt-workflows/npm-ci/.github/workflows/main.yml@v1
    with:
      # pass the matrix node version to the called workflow
      matrix-node-version: ${{ vars.MATRIX_NODE_VERSION }}
      cache-additional-path: ${{ vars.CACHE_ADDITIONAL_PATH }}
      # cache-reset: true
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test-swa-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.matrix-node-version) }}
    defaults:
      run:
        working-directory: demo
    steps:
      - uses: actions/checkout@v4

      - uses: kt-actions/npm-run-script@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-reset: ${{ inputs.cache-reset }}
          install-script: |
            npm ci
            npx playwright install
          run-script: npm run test:swa
          working-directory: ./demo

  do-test-swa-azure:
    # environment: development
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.token.outputs.result || 'false' }}
    steps:
      # We only run azure SWA deployment if we push to the default branch or create a PR into the default branch from our own org!

      # Check that it's a push into the default branch
      - id: main-push
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Push to main branch detected."
          echo "github.ref: ${{ github.ref }}"
          echo "github.event_name: ${{ github.event_name }}"
          echo "result=true" >> "$GITHUB_OUTPUT"

      # Check that it's a pull request into the default branch from within the same organization
      - id: pr-to-main
        if: |
          steps.main-push.outputs.result != 'true' &&
          github.event_name == 'pull_request' &&
          github.event.pull_request.base.ref == github.event.repository.default_branch &&
          github.event.pull_request.head.repo.owner.login == github.event.repository.owner.login
        run: |
          echo "Pull request into main branch detected from the same organization."
          echo "github.event.pull_request.base.ref: ${{ github.event.pull_request.base.ref }}"
          echo "github.event.repository.default_branch: ${{ github.event.repository.default_branch }}"
          echo "github.event.pull_request.head.repo.owner.login: ${{ github.event.pull_request.head.repo.owner.login }}"
          echo "github.event.repository.owner.login: ${{ github.event.repository.owner.login }}"
          echo "result=true" >> "$GITHUB_OUTPUT"

      # Check if AZURE_STATIC_WEB_APPS_API_TOKEN is set
      - id: token
        if: ${{ steps.main-push.outputs.result == 'true' || steps.pr-to-main.outputs.result == 'true' }}
        run: |
          if [[ -z "${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}" ]]; then
            echo "Deploy token not set. Skipping deployment."
            echo "result=false" >> "$GITHUB_OUTPUT"
          else
            echo "Deploy token is set. Proceeding with deployment."
            echo "result=true" >> "$GITHUB_OUTPUT"
          fi

  test-swa-azure:
    needs: do-test-swa-azure
    # environment: development
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.matrix-node-version) }}
    defaults:
      run:
        working-directory: demo
    steps:
      - id: app-token
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        uses: kt-actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}
          configure-git: false
          # Default to github token if secrets are not provided
          default-to-github-token: true

      - uses: actions/checkout@v4
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        with:
          token: ${{ steps.app-token.outputs.token }}

      - id: node-api-runtime
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        run: |
          NODE_API_RUNTIME_MAJOR=$(node -v | cut -d. -f1 | cut -dv -f2)
          echo "NODE_API_RUNTIME_MAJOR=$NODE_API_RUNTIME_MAJOR" >> "$GITHUB_ENV"
          NODE_API_RUNTIME=node:$NODE_API_RUNTIME_MAJOR
          echo "NODE_API_RUNTIME=$NODE_API_RUNTIME" >> "$GITHUB_ENV"

      - uses: kt-actions/npm-run-script@v1
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        with:
          node-version: ${{ matrix.node-version }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-reset: ${{ inputs.cache-reset }}
          install-script: |
            npm ci
            npx playwright install
          working-directory: ./demo

      - uses: ./.github/actions/static-web-apps-deploy-wrapper
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        id: build-deploy
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ steps.app-token.outputs.token }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: './demo' # App source code path
          api_location: './demo/func' # Api source code path - optional
          output_location: 'build/static' # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

      - run: npm test
        if: ${{ needs.do-test-swa-azure.outputs.result == 'true' }}
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.build-deploy.outputs.static_web_app_url }}

  # retry-failed:
  #   runs-on: ubuntu-latest
  #   needs: [ci, test-swa-cli, test-swa-azure]
  #   if: failure() && fromJSON(github.run_attempt) < 3
  #   permissions:
  #     actions: write
  #   steps:
  #     - env:
  #         GH_REPO: ${{ github.repository }}
  #         GH_TOKEN: ${{ github.token }}
  #         GH_DEBUG: api
  #       run: gh workflow run ci-retry.yml -F run_id=${{ github.run_id }} -F concurrency=${{ github.workflow }}-${{ github.event.number || github.ref_name }}
